<div id="googleCharts">
  <script type="text/javascript">
    var projectionDashboard = null;
    var sourceDashboard = null;
    var projectionDataTable = null;
    var sourceDataTable = null;
    var projectionColumnIndex = 4;

    google.charts.setOnLoadCallback(drawProjectionDashboard);

    // Callback that creates and populates a data table,
    // instantiates the pie chart, passes in the data and
    // draws it.
    function drawProjectionDashboard() {

      var jsonData = $.ajax({
        url: "{{ path('_webservice_getShelfShareData') }}",
        dataType: "json",
        async: false
      }).responseText;
      
      var arrayData = $.parseJSON(jsonData);

      sourceDataTable = google.visualization.arrayToDataTable(arrayData);

      projectionDashboard =  new google.visualization.Dashboard(
          document.getElementById('projectionDashboard'));

      sourceDashboard =  new google.visualization.Dashboard(
          document.getElementById('sourceDashboard'));

      var projectionTable = new google.visualization.ChartWrapper({
        'chartType': 'Table',
        'containerId': 'projectionTable',
        'options': {
        }
      });

      var sourceTable = new google.visualization.ChartWrapper({
        'chartType': 'Table',
        'containerId': 'sourceTable',
        'options': {
        }
      });

      var slider = new google.visualization.ControlWrapper({
        'controlType': 'NumberRangeFilter',
        'containerId': 'slider_div',
        'options': {
          'filterColumnIndex': 2,
          'ui': {
            'labelStacking': 'vertical',
            'label': 'Age Filter:'
          }
        }
      });

      var sourceDataTable_control1 = new google.visualization.ControlWrapper({
          'controlType': 'CategoryFilter',
          'containerId': 'sourceDataTable_control1',
          'options': {
              'filterColumnIndex': 0,
              'ui': {
                  'labelStacking': 'vertical',
                  //'label': 'Col 1',
                  'allowTyping': true,
                  'allowMultiple': true
              }
          }
      });

      var sourceDataTable_control2 = new google.visualization.ControlWrapper({
          'controlType': 'CategoryFilter',
          'containerId': 'sourceDataTable_control2',
          'options': {
              'filterColumnIndex': 1,
              'ui': {
                  'labelStacking': 'vertical',
                  //'label': 'Col 1',
                  'allowTyping': true,
                  'allowMultiple': true
              }
          }
      });

      var sourceDataTable_control3 = new google.visualization.ControlWrapper({
          'controlType': 'CategoryFilter',
          'containerId': 'sourceDataTable_control3',
          'options': {
              'filterColumnIndex': 2,
              'ui': {
                  'labelStacking': 'vertical',
                  //'label': 'Col 1',
                  'allowTyping': true,
                  'allowMultiple': true
              }
          }
      });

      var sourceDataTable_control4 = new google.visualization.ControlWrapper({
          'controlType': 'CategoryFilter',
          'containerId': 'sourceDataTable_control4',
          'options': {
              'filterColumnIndex': 3,
              'ui': {
                  'labelStacking': 'vertical',
                  //'label': 'Col 1',
                  'allowTyping': true,
                  'allowMultiple': true
              }
          }
      });

      var sourceDataTable_control5 = new google.visualization.ControlWrapper({
          'controlType': 'CategoryFilter',
          'containerId': 'sourceDataTable_control5',
          'options': {
              'filterColumnIndex': 4,
              'ui': {
                  'labelStacking': 'vertical',
                  //'label': 'Col 1',
                  'allowTyping': true,
                  'allowMultiple': true
              }
          }
      });

      var sourceDataTable_control6 = new google.visualization.ControlWrapper({
          'controlType': 'CategoryFilter',
          'containerId': 'sourceDataTable_control6',
          'options': {
              'filterColumnIndex': 5,
              'ui': {
                  'labelStacking': 'vertical',
                  //'label': 'Col 1',
                  'allowTyping': true,
                  'allowMultiple': true
              }
          }
      });

      var projectionDataTable_control1 = new google.visualization.ControlWrapper({
          'controlType': 'CategoryFilter',
          'containerId': 'projectionDataTable_control1',
          'options': {
              'filterColumnIndex': 0,
              'ui': {
                  'labelStacking': 'vertical',
                  //'label': 'Col 1',
                  'allowTyping': true,
                  'allowMultiple': true
              }
          }
      });

      google.visualization.events.addListener(sourceTable, 'ready',
          function(event) {
              projectionDataTable = sourceTable.getDataTable();
              drawProjectionChart(projectionColumnIndex);
          }
      );

      var pie = new google.visualization.ChartWrapper({
        'chartType': 'PieChart',
        'containerId': 'chart_div',
        'options': {
          'width': 400,
          'height': 400,
          'legend': {position: 'right', alignment :'center', textStyle: {color: 'blue', fontSize: 10}},
          'chartArea': {'left': 80, 'top': 15, 'right': 0, 'bottom': 0},
          'pieSliceText': 'label'
        },
        //'sliceVisibilityThreshold' : 30,
        //'view': {'columns': [4,5]}
        'view': {'columns': [0,1]}
      });

      var jsonData = $.ajax({
        url: "{{ path('_webservice_getShelfShareData') }}",
        dataType: "json",
        async: false
        }).responseText;
      
      var arrayData = $.parseJSON(jsonData);

      sourceDashboard.bind([ sourceDataTable_control1, sourceDataTable_control2, sourceDataTable_control3,sourceDataTable_control4, sourceDataTable_control5, sourceDataTable_control6 ], [sourceTable]);
      sourceDashboard.draw(sourceDataTable);

      projectionDataTable = google.visualization.arrayToDataTable(arrayData);
      projectionDashboard.bind([ projectionDataTable_control1], [projectionTable, pie]);
      drawProjectionChart(projectionColumnIndex);
    }

    function drawProjectionChart(projectionColumnIndex){
      //alert('Projection column index : ' + projectionColumnIndex);
      var sortColmuns = [];
      sortColmuns.push( parseInt(projectionColumnIndex) );
      projectionDashboard.draw( google.visualization.data.group(projectionDataTable, sortColmuns,
      [{'column': 6, 'aggregation': google.visualization.data.sum, 'type': 'number'}]) );       
    }
  </script>


  <div id="projectionDashboard" style="margin-top: 1em; background-color:#fff">
      <center>
          <a class="btn btn-small" data-toggle="modal" data-target="#myModal">
              <i class="fa fa-filter" aria-hidden="true"></i>
              Gérer les données du graphique shelfshare
          </a>
          <div id="chart_div" style="padding-top: 15px"><div style="height:300px;margin-top:140px; color:#999"><smal>Chargement des données...</small></div></div>
      </center>
      <div id="projectionTable" class="hidden" style="padding-top: 15px"></div>
            
      <div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
        <div class="modal-dialog" style="width:80%;">
          <div class="modal-content">
            <div class="modal-header">
              <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
              <h4 class="modal-title">Filtre - Graphique Shelf Share</h4>
            </div>
            <div class="modal-body">
              <div class="row">
                  <div class="col-sm-4">
                      <b>Filtrer la source de données :</b>
                      <hr/>
                      <div id="slider_div" style="padding-left: 15px"></div>
                      <div id="sourceDataTable_control1"></div>
                      <div id="sourceDataTable_control2"></div>
                      <div id="sourceDataTable_control3"></div>
                      <div id="sourceDataTable_control4"></div>
                      <div id="sourceDataTable_control5"></div>
                      <div id="sourceDataTable_control6"></div>
                  </div>
                  <div class="col-sm-3">
                      <b>Projeter les données par :</b>
                      <hr/>
                      <div>
                          <div><input type="checkbox" value="0" name="projectionColumn[]">&nbsp;&nbsp;Point de vente</div>
                          <div><input type="checkbox" value="1" name="projectionColumn[]">&nbsp;&nbsp;Point d'intérêt</div>
                          <div><input type="checkbox" value="2" name="projectionColumn[]">&nbsp;&nbsp;Catégorie</div>
                          <div><input type="checkbox" value="3" name="projectionColumn[]">&nbsp;&nbsp;Segment</div>
                          <div><input type="checkbox" value="4" name="projectionColumn[]" checked>&nbsp;&nbsp;Marque</div>
                      </div>
                      <script>
                          $( document ).ready(function() {
                              $('input').iCheck('destroy'); // disable icheckbox

                              $("input:checkbox").click(function() {
                                  if ($(this).is(":checked")) {
                                      var group = "input:checkbox[name='" + $(this).attr("name") + "']";
                                      $(group).prop("checked", false);
                                      $(this).prop("checked", true);
                                  } else {
                                      $(this).prop("checked", false);
                                  }
                                  $.each($("input[name='projectionColumn[]']:checked"), function() {
                                    projectionColumnIndex = $(this).val();
                                    drawProjectionChart(projectionColumnIndex);
                                  });
                              });
                          });
                      </script>
                  </div>
                  <div class="col-sm-4">
                      <b>Filtrer les données projectées :</b>
                      <hr/>
                      <div id="slider_div" style="padding-left: 15px"></div>
                      <div id="projectionDataTable_control1"></div>
                      <div id="projectionDataTable_control2"></div>
                  </div>
              </div>
            </div>
            <div class="modal-footer">
              <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
          </div>
        </div>
      </div>
  </div>
  <div id="sourceDashboard" style="border: 1px solid #ccc; margin-top: 1em; background-color:#fff">
      <div id="sourceTable" class="hidden" style="padding-top: 15px"></div>
  </div>
</div>
